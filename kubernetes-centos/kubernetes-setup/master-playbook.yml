---
- hosts: all
  become: true
  tasks:
    - name: Create file /etc/modules-load.d/containerd.conf
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: modprobe network
      command: modprobe overlay

    - name: modprobe network
      command: modprobe br_netfilter

    - name: Create file /etc/sysctl.d/99-kubernetes-cri.conf
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: setup kube network
      command: sysctl --system

    - name: Install packages that allow apt to be used over HTTPS
      yum:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2

    - name: "Configuring docker-ce repo"
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: 0644

    - name: Install containerd and its dependencies
      yum:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - containerd.io

    - name: Config containerd
      shell: containerd config default > config.toml
      args:
        chdir: /etc/containerd/

    - name: Restart containerd
      service:
        name: containerd
        daemon_reload: yes
        state: restarted
        enabled: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a

    - name: Create file /etc/yum.repos.d/kubernetes.repo
      copy:
        dest: "/etc/yum.repos.d/kubernetes.repo"
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive

    - name: Install Kubernetes binaries
      yum:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet-1.16.4-0
          - kubeadm-1.16.4-0
          - kubectl-1.16.4-0

    - name: Create file /etc/default/kubelet
      file:
        path: /etc/default/kubelet
        state: touch

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
        enabled: yes

    - name: Initialize the Kubernetes cluster using kubeadm
      command: 'kubeadm init --apiserver-advertise-address="{{ node_ip }}" --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name k8s-master --pod-network-cidr=10.244.0.0/16'
      register: init_output
    - name: Setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/vagrant/.kube
        - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
        - chown vagrant:vagrant /home/vagrant/.kube/config

    - block:
        - name: Copy canal network file
          copy:
            src: ./canal.yaml
            dest: /tmp/canal.yaml
        - name: Install Canal pod network
          become: false
          command: kubectl apply -f /tmp/canal.yaml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
    - name: Copy join command to local file
      become: no
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
    - name: Copy kubeconfig to local file
      become: no
      fetch:
        src: /home/vagrant/.kube/config
        dest: ./kube.config
        flat: yes
